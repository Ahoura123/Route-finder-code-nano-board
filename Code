# route-finder-code
#include <Servo.h>

// Define motor pins
#define motor1A 3
#define motor1B 5
#define motor2A 9
#define motor2B 10

// Define ultrasonic sensor pins
#define trigPin 13
#define echoPin 12

Servo servo;

void setup() {
  // Motor setup
    pinMode(motor1A, OUTPUT);
      pinMode(motor1B, OUTPUT);
        pinMode(motor2A, OUTPUT);
          pinMode(motor2B, OUTPUT);

            // Ultrasonic sensor setup
              pinMode(trigPin, OUTPUT);
                pinMode(echoPin, INPUT);

                  // Servo setup
                    servo.attach(6);
                    }

                    void loop() {
                      // Move forward
                        moveForward();

                          // Check for obstacles
                            if (obstacleDetected()) {
                                // Avoid obstacle
                                    avoidObstacle();
                                      }
                                      }

                                      void moveForward() {
                                        digitalWrite(motor1A, HIGH);
                                          digitalWrite(motor1B, LOW);
                                            digitalWrite(motor2A, HIGH);
                                              digitalWrite(motor2B, LOW);
                                              }

                                              void moveBackward() {
                                                digitalWrite(motor1A, LOW);
                                                  digitalWrite(motor1B, HIGH);
                                                    digitalWrite(motor2A, LOW);
                                                      digitalWrite(motor2B, HIGH);
                                                      }

                                                      void turnLeft() {
                                                        digitalWrite(motor1A, LOW);
                                                          digitalWrite(motor1B, HIGH);
                                                            digitalWrite(motor2A, HIGH);
                                                              digitalWrite(motor2B, LOW);
                                                              }

                                                              void turnRight() {
                                                                digitalWrite(motor1A, HIGH);
                                                                  digitalWrite(motor1B, LOW);
                                                                    digitalWrite(motor2A, LOW);
                                                                      digitalWrite(motor2B, HIGH);
                                                                      }

                                                                      void avoidObstacle() {
                                                                        // Stop
                                                                          digitalWrite(motor1A, LOW);
                                                                            digitalWrite(motor1B, LOW);
                                                                              digitalWrite(motor2A, LOW);
                                                                                digitalWrite(motor2B, LOW);

                                                                                  // Rotate servo to scan for free path
                                                                                    for (int angle = 0; angle <= 180; angle += 15) {
                                                                                        servo.write(angle);
                                                                                            delay(500);
                                                                                                if (!obstacleDetected()) {
                                                                                                      // Found a clear path, choose direction and resume movement
                                                                                                            if (angle < 90) {
                                                                                                                    turnLeft();
                                                                                                                          } else {
                                                                                                                                  turnRight();
                                                                                                                                        }
                                                                                                                                              delay(1000); // Adjust this delay based on your requirements
                                                                                                                                                    moveForward();
                                                                                                                                                          return;
                                                                                                                                                              }
                                                                                                                                                                }

                                                                                                                                                                  // No clear path found, rotate back to initial position and move backward
                                                                                                                                                                    servo.write(90);
                                                                                                                                                                      delay(500);
                                                                                                                                                                        moveBackward();
                                                                                                                                                                          delay(1000); // Adjust this delay based on your requirements

                                                                                                                                                                            // Rotate back to initial position
                                                                                                                                                                              servo.write(90);
                                                                                                                                                                                delay(500);

                                                                                                                                                                                  // Resume forward movement
                                                                                                                                                                                    moveForward();
                                                                                                                                                                                    }

                                                                                                                                                                                    bool obstacleDetected() {
                                                                                                                                                                                      long duration, distance;

                                                                                                                                                                                        // Trigger ultrasonic sensor
                                                                                                                                                                                          digitalWrite(trigPin, LOW);
                                                                                                                                                                                            delayMicroseconds(2);
                                                                                                                                                                                              digitalWrite(trigPin, HIGH);
                                                                                                                                                                                                delayMicroseconds(10);
                                                                                                                                                                                                  digitalWrite(trigPin, LOW);

                                                                                                                                                                                                    // Read the echo pulse
                                                                                                                                                                                                      duration = pulseIn(echoPin, HIGH);

                                                                                                                                                                                                        // Calculate distance in centimeters
                                                                                                                                                                                                          distance = duration * 0.034 / 2;

                                                                                                                                                                                                            // Check if an obstacle is within a certain range
                                                                                                                                                                                                              return (distance < 20);
                                                                                                                                                                                                              }

                                                                                                                                                                                                              
